-- independent tables (no foreign keys)
CREATE TABLE Customers(id INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                        first_name VARCHAR(50),
                        last_name VARCHAR(50) NOT NULL,
                        street_address VARCHAR(255),
                        city VARCHAR(255),
                        zip_code VARCHAR(5),
                        birth_date DATE,
                        phone_number VARCHAR(13));

CREATE TABLE Distributors(id INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                            name VARCHAR(50) NOT NULL,
                            num_sales INT,
                            catalog VARCHAR(255),
                            phone_number VARCHAR(13) NOT NULL);

CREATE TABLE Directors(id INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                        first_name VARCHAR(50),
                        last_name VARCHAR(50) NOT NULL,
                        country VARCHAR(50));

CREATE TABLE Actors(id INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                    first_name VARCHAR(50),
                    last_name VARCHAR(50) NOT NULL,
                    country VARCHAR(50));

CREATE TABLE Awards(id INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                    name VARCHAR(255) NOT NULL,
                    issuer VARCHAR(255));

-- dependent tables (require foreign keys)
CREATE TABLE Sales(id INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                    distributor_id INT NOT NULL,
                    purchased_products VARCHAR(255) NOT NULL,
                    sale_cost FLOAT(2) NOT NULL,
                    sale_date DATE);
ALTER TABLE Sales
ADD CONSTRAINT fk_distid_sales
FOREIGN KEY(distributor_id) 
REFERENCES Distributors(id)
ON DELETE CASCADE;
--
CREATE TABLE Movies(id INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                    sale_id INT NOT NULL,
                    director_id INT NOT NULL,
                    is_dvd CHAR(1),
                    is_vhs CHAR(1),
                    genre VARCHAR(50),
                    catalog_id VARCHAR(50),
                    name VARCHAR(50) NOT NULL,
                    rating FLOAT(1),
                    runtime INT,
                    year_released INT);
ALTER TABLE Movies
ADD CONSTRAINT fk_saleid_movies
FOREIGN KEY(sale_id) 
REFERENCES Sales(id)
ON DELETE CASCADE;

ALTER TABLE Movies
ADD CONSTRAINT fk_directorid_movies
FOREIGN KEY(director_id) 
REFERENCES Directors(id)
ON DELETE CASCADE;
--
CREATE TABLE Rentals(id INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                        customer_id INT NOT NULL,
                        movie_id INT NOT NULL,
                        rental_date DATE NOT NULL,
                        due_date DATE NOT NULL,
                        rental_price FLOAT(2) NOT NULL,
                        tax FLOAT(2));
ALTER TABLE Rentals
ADD CONSTRAINT fk_custid_rentals
FOREIGN KEY(customer_id) 
REFERENCES Customers(id)
ON DELETE CASCADE;

ALTER TABLE Rentals
ADD CONSTRAINT fk_movid_rentals
FOREIGN KEY(movie_id) 
REFERENCES Movies(id)
ON DELETE CASCADE;
--
CREATE TABLE Returns(id INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                    rental_id INT NOT NULL,
                    return_date DATE NOT NULL,
                    is_damaged CHAR(1),
                    is_late CHAR(1),
                    added_fees FLOAT(2));
ALTER TABLE Returns
ADD CONSTRAINT fk_rentalid_returns
FOREIGN KEY(rental_id) 
REFERENCES Rentals(id)
ON DELETE CASCADE;
--
-- bridge tables (resolving many to many relationships)
CREATE TABLE Movie_Actors(id INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                            movie_id INT NOT NULL,
                            actor_id INT NOT NULL,
                            casting VARCHAR(50));
ALTER TABLE Movie_Actors
ADD CONSTRAINT fk_movid_movactors
FOREIGN KEY(movie_id) 
REFERENCES Movies(id)
ON DELETE CASCADE;

ALTER TABLE Movie_Actors
ADD CONSTRAINT fk_actorid_movactors
FOREIGN KEY(actor_id) 
REFERENCES Actors(id)
ON DELETE CASCADE;
--
CREATE TABLE Movie_Awards(id INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                            movie_id INT NOT NULL,
                            award_id INT NOT NULL,
                            year_awarded INT);
ALTER TABLE Movie_Awards
ADD CONSTRAINT fk_movid_movawrds
FOREIGN KEY(movie_id) 
REFERENCES Movies(id)
ON DELETE CASCADE;

ALTER TABLE Movie_Awards
ADD CONSTRAINT fk_awardid_movawrds
FOREIGN KEY(award_id) 
REFERENCES Awards(id)
ON DELETE CASCADE;
--
CREATE TABLE Director_Awards(id INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                                award_id INT NOT NULL,
                                director_id INT NOT NULL,
                                year_awarded INT);
ALTER TABLE Director_Awards
ADD CONSTRAINT fk_awardid_dirawrds
FOREIGN KEY(award_id) 
REFERENCES Awards(id)
ON DELETE CASCADE;

ALTER TABLE Director_Awards
ADD CONSTRAINT fk_dirid_dirawrds
FOREIGN KEY(director_id) 
REFERENCES Directors(id)
ON DELETE CASCADE;
--
CREATE TABLE Actor_Awards(id INT GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                            award_id INT NOT NULL,
                            actor_id INT NOT NULL,
                            year_awarded INT);
ALTER TABLE Actor_Awards
ADD CONSTRAINT fk_awardid_actorawrds
FOREIGN KEY(award_id) 
REFERENCES Awards(id)
ON DELETE CASCADE;

ALTER TABLE Actor_Awards
ADD CONSTRAINT fk_actorid_sales
FOREIGN KEY(actor_id) 
REFERENCES Actors(id)
ON DELETE CASCADE;